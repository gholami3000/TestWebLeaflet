@{
    ViewData["Title"] = "نقشه ایران";
    Layout = null;
}
<!DOCTYPE html>
<html lang="fa">
<head>
    <meta charset="utf-8" />
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <style>
        #map { height: 600px; }
    </style>
</head>
<body>
    <h2>نمایش نقشه ایران با GeoJSON</h2>
    <div id="map"></div>

    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script>
        const map = L.map('map').setView([32.0, 53.0], 5);

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 18
        }).addTo(map);

        fetch('/data/ir.json')
            .then(res => res.json())
            .then(data => {
                const geo = L.geoJSON(data, {
                    style: {
                        color: 'blue',
                        weight: 2,
                        fillOpacity: 0.1
                    },
                    onEachFeature: function (feature, layer) {
                        if (feature.properties && feature.properties.name) {
                            layer.bindPopup(feature.properties.name);
                        }
                    }
                }).addTo(map);
                map.fitBounds(geo.getBounds());
            });

                  fetch('/data/ir2.json')
            .then(res => res.json())
            .then(data => {
                const geo = L.geoJSON(data, {
                    style: {
                        color: 'red',
                        weight: 2,
                        fillOpacity: 0.1
                    },
                    onEachFeature: function (feature, layer) {
                        if (feature.properties && feature.properties.name) {
                            layer.bindPopup(feature.properties.name);
                        }
                    }
                }).addTo(map);
                map.fitBounds(geo.getBounds());
            });

            fetch('/data/ksc.json')
            .then(res => res.json())
            .then(data => {
                const geo = L.geoJSON(data, {
                    style: {
                        color: 'green',
                        weight: 2,
                        fillOpacity: 0.1
                    },
                    onEachFeature: function (feature, layer) {
                        if (feature.properties && feature.properties.name) {
                            layer.bindPopup(feature.properties.name);
                        }
                    }
                }).addTo(map);
                map.fitBounds(geo.getBounds());
            });

    </script>
</body>
</html>
